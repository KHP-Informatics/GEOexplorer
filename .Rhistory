marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$cov.coefficients, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$qr, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$genes, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
x <- "genes"
fit2[x]
x <- "genes"
attr(fit2, x)
fit2Df <- data.frame(fit2$p.value, fit2$design, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$s2.prior, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$s2.post, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$s2.post, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$p.value, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$F.p.value, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$rank, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$df.residual, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$stdev.unscaled, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$Amean, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$contrasts, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$var.prior, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$t, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$lods, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$assign, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$sigma, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$pivot, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$method, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$df.prior, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$proportion, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$df.total, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$F, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(fit2$p.value, fit2$coefficients, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(log10(fit2$p.value), fit2$coefficients, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(log10(fit2$p.value), log2(fit2$coefficients), expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame(log10(fit2$p.value), fit2$coefficients, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
fit2Df <- data.frame((0-log10(fit2$p.value)), fit2$coefficients, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.1, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
attributes(fit2Df)
fit2Df <- data.frame((0-log10(fit2$p.value)), fit2$coefficients, expression = dT[,ct])
attributes(fit2Df)
fig <- plot_ly(data = fit2Df, x = ~Group1.Group2.1, y = ~Group1.Group2, color = ~Group1.Group2.2, colors = c("blue", "black", "red"), type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Average log-expression"
),
yaxis = list(
title = "log-fold-change"
))
fig
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='geo2r-shiny-data-visualisation', token='0495C06EF4D78607202154CB2C603266', secret='FLzkd5VS0pHAoH7A9zbWgkb1aj/Ltm2dJveefq2V')
options(repos = BiocManager::repositories())
rsconnect::deployApp('C:/Users/guypw/OneDrive/Documents/geo2rShinyApp', appName = "geo2r_data_visulisation")
help(qqt)
fig <- plot_ly(x = fit2$t[t.good], y = fit2$df.total[t.good], type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Log2 Fold Change"
),
yaxis = list(
title = "-log10(P-value)"
))
fig
qqnorm(fit2$t[t.good], fit2$df.total[t.good])
qqnorm(fit2$df.total[t.good])
qqnorm(fit2$df.total[t.good], plot.it = FALSE)
x <- qqnorm(fit2$df.total[t.good], plot.it = FALSE)
x
y <- qqnorm(fit2$df.total[t.good], plot.it = FALSE)
y
fig <- plot_ly(x = fit2$t[t.good], y = y, type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Log2 Fold Change"
),
yaxis = list(
title = "-log10(P-value)"
))
fig
y <- qqt(fit2$t[t.good], fit2$df.total[t.good], main="Moderated t statistic", plot.it = FALSE)
y
y <- qqt(fit2$t[t.good], fit2$df.total[t.good], main="Moderated t statistic", plot.it = FALSE)
y
fig <- plot_ly(data = y, x = ~x, y = ~y, type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Log2 Fold Change"
),
yaxis = list(
title = "-log10(P-value)"
))
fig
attributes(y)
qqData <- qqt(fit2$t[t.good], fit2$df.total[t.good], main="Moderated t statistic", plot.it = FALSE)
attributes(qqData)
fig <- plot_ly(data = qqData, x = ~x, y = ~y, type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Log2 Fold Change"
),
yaxis = list(
title = "-log10(P-value)"
))
fig
fig <- plot_ly(data = qqData, x = ~y, y = ~x, type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Log2 Fold Change"
),
yaxis = list(
title = "-log10(P-value)"
))
fig
fig <- plot_ly(data = qqData, x = ~y, y = ~x, type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- plot_ly(x = qqData$x, y = qqData$y, type = 'scatter', mode = 'markers',
marker = list(size = 3))
fig <- fig %>% layout(
title = ('Group1-Group2'),
xaxis = list(
title = "Log2 Fold Change"
),
yaxis = list(
title = "-log10(P-value)"
))
fig
qqData <- qqt(fit2$t[t.good], fit2$df.total[t.good], main="Moderated t statistic", plot.it = TRUE)
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='geo2r-shiny-data-visualisation', token='0495C06EF4D78607202154CB2C603266', secret='FLzkd5VS0pHAoH7A9zbWgkb1aj/Ltm2dJveefq2V')
options(repos = BiocManager::repositories())
rsconnect::deployApp('C:/Users/guypw/OneDrive/Documents/geo2rShinyApp', appName = "geo2r_data_visulisation")
