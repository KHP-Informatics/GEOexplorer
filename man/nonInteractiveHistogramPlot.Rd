% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/nonInteractiveDifferentialGeneExpressionDataVisualizationFunctions.R
\name{nonInteractiveHistogramPlot}
\alias{nonInteractiveHistogramPlot}
\title{A Function to Create a Histogram of the P values from Differential Gene Expression Analysis}
\usage{
nonInteractiveHistogramPlot(fit2, adjustment)
}
\arguments{
\item{fit2}{An object containing the results of differntial gene expression analysis which can be obtained from the calculateDifferentialGeneExpression() function}

\item{adjustment}{A character string containing the adjustment to P-values}
}
\description{
This function allows you to plot a histogram of the P values from differential gene expression analysis
}
\examples{
#' # Get the GEO data for all platforms
geoAccessionCode <- "GSE18388"
allGset <- getGeoObject(geoAccessionCode)

# Extract platforms
platforms <- extractPlatforms(allGset)
platform <- platforms[1]

# Extract the GEO2R data from the specified platform
gsetData <- extractPlatformGset(allGset, platform)

# Extract expression data
expressionData <- extractExpressionData(gsetData)

# Apply log transformation to expression data if necessary
logTransformation <- "Auto-Detect"
dataInput <- calculateLogTransformation(expressionData, logTransformation)

# Perform KNN transformation on log expression data if necessary
knnDataInput <- calculateKnnImpute(dataInput, "Yes")

# Extract experimental condition/sample names
columnNames <- extractSampleNames(expressionData)

# Define Groups
numberOfColumns <- length(columnNames)
numberOfColumns <- numberOfColumns + 1
halfNumberOfColumns <- ceiling(numberOfColumns/2)
i <- 0

group1 <- c()
group2 <- c()

for (name in columnNames) {
  if (i < halfNumberOfColumns) {
    group1 <- c(group1, name)
    i <- i +1
  } else {
    group2 <- c(group2, name)
    i <- i +1
  }
}

# Select columns in group2
column2 <- calculateExclusiveColumns(columnNames, group1)

# Calculate gsms
gsms <- calculateEachGroupsSamples(columnNames,group1, group2)

# Convert P value adjustment
pValueAdjustment <- "Benjamini & Hochberg (False discovery rate)"
adjustment <- convertAdjustment(pValueAdjustment)

# Get fit 2
limmaPrecisionWeights <- "Yes"
forceNormalization <- "Yes"
fit2 <- calculateDifferentialGeneExpression(gsms, limmaPrecisionWeights, forceNormalization, gsetData, knnDataInput)

# Summarize test results as "up", "down" or "not expressed"
significanceLevelCutOff <- 0.05
dT <- calculateDifferentialGeneExpressionSummary(fit2, adjustment, significanceLevelCutOff)
ct <- 1

# Non-Interactive Histogram
fig <- nonInteractiveHistogramPlot(fit2, adjustment)

fig <- nonInteractiveHistogramPlot(fit2, adjustment)
}
\seealso{
\code{\link[=calculateDifferentialGeneExpression]{calculateDifferentialGeneExpression()}} for differential gene expression object
}
\author{
Guy Hunt
}
\keyword{GEO}
\keyword{internal}
