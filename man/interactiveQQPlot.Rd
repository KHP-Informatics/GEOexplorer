% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/interactiveDifferentialGeneExpressionDataVisualizationFunctions.R
\name{interactiveQQPlot}
\alias{interactiveQQPlot}
\title{A Function to Create an Interactive QQ Plot of the Quantiles of a Data Sample Against the Theoretical Quantiles of a Student's T Distribution from Differential Gene Expression Analysis}
\usage{
interactiveQQPlot(fit2, dT, ct)
}
\arguments{
\item{fit2}{An object containing the results of differential gene expression analysis which can be obtained from the calculateDifferentialGeneExpression() function}

\item{dT}{An object that summarises if each gene is unregulated, down regulated or has a similar level of expression which can be obtained from the calculateDifferentialGeneExpressionSummary() function}

\item{ct}{A integer indicating the column to select from the dT object}
}
\description{
This function allows you to plot an interactive QQ plot of the quantiles of a data sample against the theoretical quantiles of a Student's t distribution from differential gene expression analysis
}
\examples{
# Get the GEO data for all platforms
geoAccessionCode <- "GSE18388"
allGset <- getGeoObject(geoAccessionCode)

# Extract platforms
platforms <- extractPlatforms(allGset)
platform <- platforms[1]

# Extract the GEO2R data from the specified platform
gsetData <- extractPlatformGset(allGset, platform)

# Extract expression data
expressionData <- extractExpressionData(gsetData)

# Apply log transformation to expression data if necessary
logTransformation <- "Auto-Detect"
dataInput <- calculateLogTransformation(expressionData, logTransformation)

# Perform KNN transformation on log expression data if necessary
knnDataInput <- calculateKnnImpute(dataInput, "Yes")

# Extract experimental condition/sample names
columnNames <- extractSampleNames(expressionData)

# Define Groups
numberOfColumns <- length(columnNames)
numberOfColumns <- numberOfColumns + 1
halfNumberOfColumns <- ceiling(numberOfColumns/2)
i <- 0

group1 <- c()
group2 <- c()

for (name in columnNames) {
  if (i < halfNumberOfColumns) {
    group1 <- c(group1, name)
    i <- i +1
  } else {
    group2 <- c(group2, name)
    i <- i +1
  }
}

# Select columns in group2
column2 <- calculateExclusiveColumns(columnNames, group1)

# Calculate gsms
gsms <- calculateEachGroupsSamples(columnNames,group1, group2)

# Convert P value adjustment
pValueAdjustment <- "Benjamini & Hochberg (False discovery rate)"
adjustment <- convertAdjustment(pValueAdjustment)

# Get fit 2
limmaPrecisionWeights <- "Yes"
forceNormalization <- "Yes"
fit2 <- calculateDifferentialGeneExpression(gsms, limmaPrecisionWeights, forceNormalization, gsetData, knnDataInput)

# Summarize test results as "up", "down" or "not expressed"
significanceLevelCutOff <- 0.05
dT <- calculateDifferentialGeneExpressionSummary(fit2, adjustment, significanceLevelCutOff)

# Interactive Q-Q plot
ct <- 1
fig <- interactiveQQPlot(fit2, dT, ct)
fig

}
\seealso{
\code{\link[=calculateDifferentialGeneExpression]{calculateDifferentialGeneExpression()}} for differential gene expression object, \code{\link[=calculateDifferentialGeneExpressionSummary]{calculateDifferentialGeneExpressionSummary()}} for summary differential gene expression object
}
\author{
Guy Hunt
}
\keyword{GEO}
